package net.mcreator.enemyexpproofofconcept.configuration;

import net.minecraftforge.common.ForgeConfigSpec;

public class BetterConfigConfiguration {
	public static final ForgeConfigSpec.Builder BUILDER = new ForgeConfigSpec.Builder();
	public static final ForgeConfigSpec SPEC;
	public static final ForgeConfigSpec.ConfigValue<Double> PETRIMANSPAWNINGDEPTH;
	public static final ForgeConfigSpec.ConfigValue<Double> SILVERKINGSPAWNINGDEPTH;
	public static final ForgeConfigSpec.ConfigValue<Double> CRAWLERSPAWNINGDEPTH;
	public static final ForgeConfigSpec.ConfigValue<Double> TROLLSPAWNINGDEPTH;
	public static final ForgeConfigSpec.ConfigValue<Double> VAMPIRESPAWNINGDEPTH;
	public static final ForgeConfigSpec.ConfigValue<Double> INTRUDERSPAWNINGDEPTH;
	public static final ForgeConfigSpec.ConfigValue<Double> COCKATRICESPAWNINGDEPTH;
	public static final ForgeConfigSpec.ConfigValue<Double> PETRIMANZOMBIEREPLACEMENT;
	public static final ForgeConfigSpec.ConfigValue<Double> SILVERKINGSPIDERREPLACEMENT;
	public static final ForgeConfigSpec.ConfigValue<Double> CREEPSREPLACEMENT;
	public static final ForgeConfigSpec.ConfigValue<Double> VAMPIRESKELETONREPLACEMENT;
	public static final ForgeConfigSpec.ConfigValue<Double> TROLLENDERMANREPLACEMENT;
	public static final ForgeConfigSpec.ConfigValue<Double> CINDERBLAZEREPLACEMENT;
	public static final ForgeConfigSpec.ConfigValue<Double> SPIDERTARANTULAREPLACEMENT;
	public static final ForgeConfigSpec.ConfigValue<Double> SPIDERSCORPIONREPLACEMENT;
	public static final ForgeConfigSpec.ConfigValue<Double> HORDEZOMBIEREPLACEMENT;
	public static final ForgeConfigSpec.ConfigValue<Double> ILLAGERVILLAGERREPLACEMENT;
	public static final ForgeConfigSpec.ConfigValue<Double> IRONGOLEMRAVAGERREPLACEMENT;
	public static final ForgeConfigSpec.ConfigValue<Double> RAVAGERMARAUDERREPLACEMENT;
	public static final ForgeConfigSpec.ConfigValue<Double> SPUTTERSTRIDERREPLACEMENT;
	public static final ForgeConfigSpec.ConfigValue<Double> HORNETVEXREPLACEMENT;
	public static final ForgeConfigSpec.ConfigValue<Double> SKELETALHORSERIDERADDITION;
	public static final ForgeConfigSpec.ConfigValue<Double> PETRIMANZOMBIEREPLACEMENTDEPTH;
	public static final ForgeConfigSpec.ConfigValue<Double> SILVERKINGSPIDERREPLACEMENTDEPTH;
	public static final ForgeConfigSpec.ConfigValue<Double> CREEPSREPLACEMENTDEPTH;
	public static final ForgeConfigSpec.ConfigValue<Double> VAMPIRESKELETONREPLACEMENTDEPTH;
	public static final ForgeConfigSpec.ConfigValue<Double> TROLLENDERMANREPLACEMENTDEPTH;
	public static final ForgeConfigSpec.ConfigValue<Double> MEATHEADWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> HEADBITTENWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> SLIMEHEADWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> SPIDERLATCHWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> SILVERHEADWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> HORSEHEADWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> MINIWITHERWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> FLUTTERFLIERSWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> PHANTASMWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> SPECTRALWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> BRUTISHGARMENTWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> BULLSKULLWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> BANEMASKWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> GLADLINGWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> GUARDSMASKWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Boolean> HATTEDMOBSARECHAMPIONS;
	public static final ForgeConfigSpec.ConfigValue<Double> RESTINGVIGORWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> COCKATRICEWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> LEATHERWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> CHAINMAILWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> IRONWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> GOLDWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> DIAMONDWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> NETHERITEWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> EMERALDWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> AMETHYSTWEARERSPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> PUNCHINGRAMDROPSWOOLCHANCE;
	public static final ForgeConfigSpec.ConfigValue<Double> WANDERINGTRADERBECOMESILLUSIONERONHITCHANCE;
	public static final ForgeConfigSpec.ConfigValue<Double> VARYINGSPEED;
	public static final ForgeConfigSpec.ConfigValue<Double> SKELETONSWITCHUP;
	public static final ForgeConfigSpec.ConfigValue<Double> FLIESFROMZOMBIES;
	public static final ForgeConfigSpec.ConfigValue<Double> PILLAGERWITHREAVER;
	public static final ForgeConfigSpec.ConfigValue<Double> BABYZOMBIESPAWNING;
	public static final ForgeConfigSpec.ConfigValue<Double> BABYZOMBIEHEALTH;
	public static final ForgeConfigSpec.ConfigValue<Double> PHANTOMHEALTH;
	public static final ForgeConfigSpec.ConfigValue<Double> ANGRYZOMBIFIEDPIGLINS;
	public static final ForgeConfigSpec.ConfigValue<Boolean> PLAYERBOWSPEED;
	public static final ForgeConfigSpec.ConfigValue<Boolean> KILLSTREAKEFFECT;
	public static final ForgeConfigSpec.ConfigValue<Double> KILLSTREAKDURATION;
	public static final ForgeConfigSpec.ConfigValue<Boolean> QUICKDRAW;
	public static final ForgeConfigSpec.ConfigValue<Boolean> ALLATTACKSKNOCKYOUBACK;
	public static final ForgeConfigSpec.ConfigValue<Double> SKELETONBOWBREAKONCRIT;
	public static final ForgeConfigSpec.ConfigValue<Double> PHANTOMGROUNDBINDING;
	public static final ForgeConfigSpec.ConfigValue<Boolean> RANDOMPHANTOMSIZE;
	public static final ForgeConfigSpec.ConfigValue<Double> SKELETONDEATHKILLSSKELETONHORSES;
	public static final ForgeConfigSpec.ConfigValue<Boolean> EYESTALKERHOSTILITY;
	public static final ForgeConfigSpec.ConfigValue<Double> STRENGTH;
	public static final ForgeConfigSpec.ConfigValue<Double> SPEED;
	public static final ForgeConfigSpec.ConfigValue<Double> RESISTANCE;
	public static final ForgeConfigSpec.ConfigValue<Double> HASTE;
	public static final ForgeConfigSpec.ConfigValue<Double> FIRERES;
	public static final ForgeConfigSpec.ConfigValue<Double> CHAMPION;
	static {
		BUILDER.push("naturalSpawningDepth");
		PETRIMANSPAWNINGDEPTH = BUILDER.comment("The specified mob will only naturally spawn below the specified y-level. This is so certain mobs are cave-exclusive by default.").define("Petriman Spawning Depth", (double) 55);
		SILVERKINGSPAWNINGDEPTH = BUILDER.define("Silverking Spawning Depth", (double) -10);
		CRAWLERSPAWNINGDEPTH = BUILDER.define("Crawler Spawning Depth", (double) 65);
		TROLLSPAWNINGDEPTH = BUILDER.define("Troll Spawning Depth", (double) -10);
		VAMPIRESPAWNINGDEPTH = BUILDER.define("Vampire Spawning Depth", (double) -10);
		INTRUDERSPAWNINGDEPTH = BUILDER.define("Intruder Spawning Depth", (double) 35);
		COCKATRICESPAWNINGDEPTH = BUILDER.define("Cockatrice Spawning Depth", (double) 60);
		BUILDER.pop();
		BUILDER.push("mobReplacement");
		PETRIMANZOMBIEREPLACEMENT = BUILDER.define("Petriman Spawns Alongside Zombie", (double) 1);
		SILVERKINGSPIDERREPLACEMENT = BUILDER.define("Silverking Spawns Alongside Spider", (double) 0.4);
		CREEPSREPLACEMENT = BUILDER.define("Crawler/Intruder Spawns Alongside Creeper", (double) 0.3);
		VAMPIRESKELETONREPLACEMENT = BUILDER.define("Vampire Spawns Alongside Skeleton", (double) 0.75);
		TROLLENDERMANREPLACEMENT = BUILDER.define("Troll Spawns Alongside Enderman", (double) 1);
		CINDERBLAZEREPLACEMENT = BUILDER.comment("(This is the only way in which Cinders will ever spawn - Disable at your own risk!)").define("Cinder Replaces Blaze", (double) 0.2);
		SPIDERTARANTULAREPLACEMENT = BUILDER.define("Tarantula Replaces Dripstone Caves Mobs", (double) 1);
		SPIDERSCORPIONREPLACEMENT = BUILDER.define("Scorpion Replaces Desert Spider", (double) 1);
		HORDEZOMBIEREPLACEMENT = BUILDER.define("Random Enemy Expansion Zombie Replacement", (double) 0);
		ILLAGERVILLAGERREPLACEMENT = BUILDER.define("Illagers Replace Villagers", (double) 0);
		IRONGOLEMRAVAGERREPLACEMENT = BUILDER.define("Ravagers Replace Iron Golems", (double) 0);
		RAVAGERMARAUDERREPLACEMENT = BUILDER.comment("Ravagers are replaced with Marauders on spawn, but only if they spawn in water").define("Marauders Replace Water-bound Ravagers", (double) 1);
		SPUTTERSTRIDERREPLACEMENT = BUILDER.comment("(This is the only way in which Sputters naturally spawn - Disable at your own risk!)").define("Sputter Spawns Alongside Strider", (double) 0.35);
		HORNETVEXREPLACEMENT = BUILDER.define("Hornet Replaces Vex", (double) 0);
		SKELETALHORSERIDERADDITION = BUILDER.define("Skeleton Horseman Addition", (double) 0.03);
		BUILDER.pop();
		BUILDER.push("mobReplacementDepth");
		PETRIMANZOMBIEREPLACEMENTDEPTH = BUILDER.define("Petriman Spawns Alongside Zombie Depth", (double) 55);
		SILVERKINGSPIDERREPLACEMENTDEPTH = BUILDER.define("Silverking Spawns Alongside Spider Depth", (double) -10);
		CREEPSREPLACEMENTDEPTH = BUILDER.define("Crawler/Intruder Spawns Alongside Creeper Depth", (double) -10);
		VAMPIRESKELETONREPLACEMENTDEPTH = BUILDER.define("Vampire Spawns Alongside Skeleton Depth", (double) -10);
		TROLLENDERMANREPLACEMENTDEPTH = BUILDER.define("Troll Spawns Alongside Enderman Depth", (double) -10);
		BUILDER.pop();
		BUILDER.push("hatWearerSpawning");
		MEATHEADWEARERSPAWNING = BUILDER.comment("Some Zombies and Skeletons will spawn wearing certain special gear. edit the minecraft:is_meatury tag to choose what biomes these mobs spawn in.").define("Meat Head Wearer Spawning", (double) 0.01);
		HEADBITTENWEARERSPAWNING = BUILDER.define("Headbitten Wearer Spawning", (double) 0.01);
		SLIMEHEADWEARERSPAWNING = BUILDER.define("Slimehead Wearer Spawning", (double) 0.01);
		SPIDERLATCHWEARERSPAWNING = BUILDER.define("Spiderlatch Wearer Spawning", (double) 0.005);
		SILVERHEADWEARERSPAWNING = BUILDER.define("Silverhead Wearer Spawning", (double) 0.005);
		HORSEHEADWEARERSPAWNING = BUILDER.define("Horsehead Wearer Spawning", (double) 0.005);
		MINIWITHERWEARERSPAWNING = BUILDER.define("Miniwither Wearer Spawning", (double) 0.001);
		FLUTTERFLIERSWEARERSPAWNING = BUILDER.define("Flutterfliers Wearer Spawning", (double) 0.003);
		PHANTASMWEARERSPAWNING = BUILDER.define("Phantasm Wearer Spawning", (double) 0.005);
		SPECTRALWEARERSPAWNING = BUILDER.define("Spectral Wearer Spawning", (double) 0.01);
		BRUTISHGARMENTWEARERSPAWNING = BUILDER.define("Brutish Garment Wearer Spawning", (double) 0.001);
		BULLSKULLWEARERSPAWNING = BUILDER.define("Bull Skull Wearer Spawning", (double) 0.01);
		BANEMASKWEARERSPAWNING = BUILDER.define("Bane Mask Wearer Spawning", (double) 0.01);
		GLADLINGWEARERSPAWNING = BUILDER.define("Gladling Wearer Spawning", (double) 0.005);
		GUARDSMASKWEARERSPAWNING = BUILDER.define("Guardsmask Wearer Spawning", (double) 0.005);
		HATTEDMOBSARECHAMPIONS = BUILDER.comment("Champion Mobs Wearing Hats are different from regular Champion spawns, in that they can spawn at different levels and also come with Absorption as a permanent effect")
				.define("Headwear-wearing mobs always spawn as Champions", true);
		RESTINGVIGORWEARERSPAWNING = BUILDER.define("Resting Vigor Wearer Spawning", (double) 0.01);
		COCKATRICEWEARERSPAWNING = BUILDER.define("Cockatrice Head Wearer Spawning", (double) 0.001);
		BUILDER.pop();
		BUILDER.push("armorWearerSpawning");
		LEATHERWEARERSPAWNING = BUILDER.define("Leather Wearer Spawning", (double) 0.03);
		CHAINMAILWEARERSPAWNING = BUILDER.define("Chainmail Wearer Spawning", (double) 0.02);
		IRONWEARERSPAWNING = BUILDER.define("Iron Wearer Spawning", (double) 0.01);
		GOLDWEARERSPAWNING = BUILDER.define("Gold Wearer Spawning", (double) 0.007);
		DIAMONDWEARERSPAWNING = BUILDER.define("Diamond Wearer Spawning", (double) 0.004);
		NETHERITEWEARERSPAWNING = BUILDER.define("Netherite Wearer Spawning", (double) 0.001);
		EMERALDWEARERSPAWNING = BUILDER.define("Emerald Wearer Spawning", (double) 0.007);
		AMETHYSTWEARERSPAWNING = BUILDER.define("Amethyst Wearer Spawning", (double) 0.007);
		BUILDER.pop();
		BUILDER.push("miscOptions");
		PUNCHINGRAMDROPSWOOLCHANCE = BUILDER.define("Punching Ram Drops Wool Chance", (double) 0);
		WANDERINGTRADERBECOMESILLUSIONERONHITCHANCE = BUILDER.define("Wandering Trader becomes Illusioner on-death Chance", (double) 0.95);
		VARYINGSPEED = BUILDER.define("Mobs Sometimes Spawn With Varying Speed Chance", (double) 0.5);
		SKELETONSWITCHUP = BUILDER.define("Skeletons Switch Weapons Mid-Fight Chance", (double) 0.2);
		FLIESFROMZOMBIES = BUILDER.define("Flies Spawn From Killed Zombies Chance", (double) 0.02);
		PILLAGERWITHREAVER = BUILDER.define("Pillagers Spawn with Reaver Chance", (double) 0.16);
		BABYZOMBIESPAWNING = BUILDER.comment("0 fully disables it, 1 fully enables it, and an inbetween acts as a percentage chance for it to work (0.13 being 13%, for example.)").define("Baby Zombie Spawning", (double) 0.13);
		BABYZOMBIEHEALTH = BUILDER.define("Baby Zombie Health Amount", (double) 2);
		PHANTOMHEALTH = BUILDER.define("Phantom Health Amount", (double) 6);
		ANGRYZOMBIFIEDPIGLINS = BUILDER.comment("Chance a Zombified Piglin will spawn hostile").define("Hostile Zombified Piglin Chance", (double) 0.01);
		PLAYERBOWSPEED = BUILDER.define("Players move faster while charging a bow", false);
		KILLSTREAKEFFECT = BUILDER.comment("Players gain the Streak effect upon killing two mobs in succession, giving them special effects defined in an mcfunction (Speed and Strength by default)").define("Streak Effect", false);
		KILLSTREAKDURATION = BUILDER.comment("Number of seconds until a Streak is lost and reset").define("Streak Effect Duration", (double) 10);
		QUICKDRAW = BUILDER.comment("Skeletons become susceptible to lethal amounts of extra damage if shot with an arrow shortly after firing their bow. Enabling faster movement whilst charging a bow with this is option enabled is recommended.")
				.define("Skeleton Quick Draw Effect", true);
		ALLATTACKSKNOCKYOUBACK = BUILDER.comment("Just for fun!").define("All Attacks Knock You Backwards", false);
		SKELETONBOWBREAKONCRIT = BUILDER.comment("Chance landing a critical strike on a bow-weilding Skeleton will disarm them.").define("Skeleton Bow Break on Crit Chance", (double) 0.33);
		PHANTOMGROUNDBINDING = BUILDER.define("Phantom's Get Groundbound When Hurt Duration (In Seconds)", (double) 3);
		RANDOMPHANTOMSIZE = BUILDER.comment("Phantoms spawn bigger than normal, making them easier to hit (but allowing them to deal more damage, too.)").define("Random Phantom Size", true);
		SKELETONDEATHKILLSSKELETONHORSES = BUILDER.define("Skeleton Death Kills Skeleton Horses Chance", (double) 0.95);
		EYESTALKERHOSTILITY = BUILDER.define("Eyestalkers are Hostile by default", false);
		BUILDER.pop();
		BUILDER.push("effectSpawning");
		STRENGTH = BUILDER.define("Chance of Strength effect applied on mob-spawn", (double) 0.01);
		SPEED = BUILDER.define("Chance of Speed effect applied on mob-spawn", (double) 0.01);
		RESISTANCE = BUILDER.define("Chance of Resistance effect applied on mob-spawn", (double) 0.01);
		HASTE = BUILDER.define("Chance of Haste effect applied on mob-spawn", (double) 0.01);
		FIRERES = BUILDER.define("Chance of Fire Resistance effect applied on mob-spawn", (double) 0.01);
		CHAMPION = BUILDER.define("Chance of a mob being a Champion upon spawning", (double) 0);
		BUILDER.pop();

		SPEC = BUILDER.build();
	}

}
